name: checks

on:
  - push
  - pull_request

jobs:
  test-php:
    name: test php ${{ matrix.php }} / ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        php: ['7.4', '8.0', '8.1']
        include:
        - os: windows-latest
          php: '7.4'
        - os: macos-latest
          php: '7.4'
    steps:
      - name: Git checkout
        uses: actions/checkout@v2

      - name: Setup PHP, with composer and extensions
        uses: shivammathur/setup-php@v2 #https://github.com/shivammathur/setup-php
        with:
          php-version: ${{ matrix.php }}
          extensions: mbstring, intl
          coverage: xdebug

      - name: Validate composer.json and composer.lock
        run: composer validate

      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Install dependencies
        run: make vendor

      - name: PHPUnit
        run: |
          echo "::add-matcher::.github/matchers/phpunit.json"
          make test
          echo "::remove-matcher owner=phpunit::"

      - name: Codecov upload
        uses: codecov/codecov-action@v1
        with:
          file: ./build/phpunit/cov.xml
          flags: php
          name: php-${{ matrix.php }}-${{ matrix.os }}

  build-js:
    name: build js
    runs-on: ubuntu-latest
    steps:
      - name: Git checkout
        uses: actions/checkout@v2

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: make node_modules

      - name: Build
        run: make build

  lint-php:
    name: lint php
    runs-on: ubuntu-latest
    steps:
      - name: Git checkout
        uses: actions/checkout@v2

      - name: Setup PHP, with composer and extensions
        uses: shivammathur/setup-php@v2 #https://github.com/shivammathur/setup-php
        with:
          php-version: '7.4'

      - name: Validate composer.json and composer.lock
        run: composer validate

      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Install dependencies
        run: make vendor

      - name: PHPCS
        if: always()
        run: |
          echo "::add-matcher::.github/matchers/phpcs.json"
          vendor/bin/phpcs --report=csv
          echo "::remove-matcher owner=phpcs::"

      - name: PHPStan
        if: always()
        run: make analyse

  lint-js:
    name: lint js
    runs-on: ubuntu-latest
    steps:
      - name: Git checkout
        uses: actions/checkout@v2

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: make node_modules

      - name: Lint
        run: make lint-js

  analyse:
    name: analyse php 8.1
    runs-on: ubuntu-latest
    steps:
      - name: Git checkout
        uses: actions/checkout@v2

      - name: Setup PHP, with composer and extensions
        uses: shivammathur/setup-php@v2 #https://github.com/shivammathur/setup-php
        with:
          php-version: '8.1'

      - name: Validate composer.json and composer.lock
        run: composer validate

      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Install dependencies
        run: make vendor

      - name: PHPStan
        run: make analyse
